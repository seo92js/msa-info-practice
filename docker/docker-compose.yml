services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "ostock_dev"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  configserver:
    image: ostock/configserver:latest
    ports:
      - "8071:8071"
    networks:
      backend:
        aliases:
          - "configserver"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8071/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  eurekaserver:
    image: ostock/eurekaserver:latest
    ports:
      - "8070:8070"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_healthy
    networks:
      backend:
        aliases:
         - "eurekaserver"

  licensingservice:
    image: ostock/licensing-service:latest
    environment:
      SPRING_PROFILES_ACTIVE: "dev"
      SPRING_CLOUD_CONFIG_URI: "http://configserver:8071"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - backend

networks:
  backend:
    driver: bridge